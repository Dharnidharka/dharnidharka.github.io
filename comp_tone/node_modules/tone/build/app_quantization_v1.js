var midiPart, notes_arr;
var player = {}, genre = "TECHNO", track_change_flag = 0, tempPlayer = {}, tempMidi, bpm = 120;
var midi, json, tempMidi, tempJson;
var url, base_dir;
var map, track, stopTime = 0;
var buffer;

var baseVolumeMap = {
  '60': 0,
  '62': 0,
  '64': 0,
  '65': 0,
  '67': 0,
  '69': 0,
  '71': 0,
  '72': 0,
};

var volumeMap = {
  '60': 0,
  '62': 0,
  '64': 0,
  '65': 0,
  '67': 0,
  '69': 0,
  '71': 0,
  '72': 0,
};

  //comment this line for client
  getMubert({
    genre: "DUBTECHNO",
    bpm: "120",
    tone: "C",
    scale: "minor",
    app: "afp"
  });

  var limiter = new Tone.Limiter(-6).toMaster();
  var vol = new Tone.Volume(-12).connect(limiter);    //change this to -24, -12 and 0
  var cheby = new Tone.Chebyshev(10).connect(vol);
  var comp = new Tone.Compressor(-30, 3).connect(cheby);
  var filter3 = new Tone.Filter(200, "highpass").connect(comp);
  var filter2 = new Tone.Filter(200, "highpass").connect(filter3);
  var filter1 = new Tone.Filter(200, "highpass").connect(filter2);

  function getMubert(params){
    genre = params.genre;
    bpm = params.bpm;
    init();
  }

  function init(){
    addBuffering();
    getMidi();
    getNotes();
    removeBuffering();
  }

  function setSchedule(){
    getTempMidi();
    getTempNotes();
    var ts="16m";
    var interval = new Tone.Time("4m");
    console.log(interval.toSeconds());
    var current = Tone.Transport.seconds;
    var newtime = current + interval.toSeconds();
    console.log(current);
    console.log(newtime);
    Tone.Transport.schedule(function(time){
        console.log('schedule');
        console.log(time);
        if(midiPart){
          midiPart.stop(time);
          player = tempPlayer;
          playMidi(midi);
          $('.item').removeClass("muted");
          $('.genre').removeClass("quadrat");
        }
      }, newtime);
  }

  function addBuffering(){
    $('#bufferContent').removeClass('hidden');
  }

  function removeBuffering(){
    $('#bufferContent').addClass('hidden');
  }

  function getMidi(){
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "https://pro.mubert.com/api", false);
    var params = '{"method":"Music", "params":[{"APP":"AFP"},{"BPM":"120.00"},{"TONE":"C"},{"SCALE":"MINOR"},{"GENRE":"' + genre + '"},{"MOOD":"ALL"}],"params_type":"title", "dt": "web", "app": "afp"}';
    xhr.send(params);
    json = JSON.parse(xhr.response);
    midi = json.data.midi;
  }

  function getNotes(){
    samples = json.data.samples;
    player = new Tone.MultiPlayer(samples,
              function(){
                  console.log('loaded');
                  playMidi(midi);
                  tempPlayer = player;
                  Tone.Transport.start("4n");
              }
          );
  }

  function getTempMidi(){
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "https://pro.mubert.com/api", false);
    var params = '{"method":"Music", "params":[{"APP":"AFP"},{"BPM":"120.00"},{"TONE":"C"},{"SCALE":"MINOR"},{"GENRE":"' + genre + '"},{"MOOD":"ALL"}],"params_type":"title", "dt": "web", "app": "afp"}';
    xhr.send(params);
    tempJson = JSON.parse(xhr.response);
    tempMidi = tempJson.data.midi;
  }

  function getTempNotes(){
    samples = tempJson.data.samples;
    tempPlayer = new Tone.MultiPlayer(samples,
              function(){
                console.log('sample loaded');
              }
          );
  }

function changeTrack(){
  console.log('changeTrack');
  setSchedule();
}

function playMidi(file) {
  MidiConvert.load(file, function(midi) {
    // make sure you set the tempo before you schedule the events
    Tone.Transport.bpm.value = midi.header.bpm;
    midiPart = new Tone.Part(function(time, note) {
    console.log(time, note);
    var str = note.midi + '';
    if(player.buffers.has(str)){
      player.connect(cheby).start(str, time, 0, note.duration);
    }

  }, midi.tracks[0].notes).start(0);
     midiPart.loop = true;
     midiPart.loopEnd = midi.duration;
     Tone.Transport.bpm.value = bpm;
  });
}
  $(document).ready(function(){
      $('.item').on('click', function(){
          var id = this.id;
          if($(this).hasClass("muted")){
            $(this).removeClass("muted");
            volumeMap[id] = 0;
            if(id in player){
              player[id].mute = false;
            }
          }
          else{
            $(this).addClass("muted");
            volumeMap[id] = -100;
            if(id in player){
              player[id].mute = true;
            }
          }
      });
      $('.genre').on('click', function(){
          var id = this.id;
          genre = id;
          $('.genre').removeClass("quadrat");
          $(this).addClass("quadrat");
          changeTrack();
      });

  });
